@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans&display=swap");

html {
  cursor: none;
}

body {
  display: grid;
  place-items: center;
  height: 100vh;
  font-family: "Plus Jakarta Sans";
  --bg: #f700ff;
  --g: #fcc0fa;
  background: var(--bg);
  --bg: #9900ff;
  overflow: hidden;
  --distance: 600;
  transition: 2s ease-in-out 3s;
  filter: brightness(0) blur(2px);
  color: var(--g);
  cursor: none;
  &:active {
    #cursor {
      &:before {
        background: var(--g);
        transition: 0s;
      }
    }
  }
  .inner {
    &.new {
      animation: fadeIn 0.5s ease-in-out 1 forwards 0.5s;
      opacity: 0;
      @keyframes fadeIn {
        to {
          opacity: 1;
        }
      }
    }
    &:before {
      content: attr(data-number);
      transition: font-size 0.5s ease-in-out;
      transform: translate(-50%, -50%)
        scale(clamp(0.45, calc(1 + ((70 - var(--distance)) / 175)), 2))
        translateZ(0px);
    }
  }
  #cursor {
    pointer-events: none;
    opacity: 0;
    width: 3vmin;
    height: 3vmin;
    position: absolute;
    filter: drop-shadow(0 1px 0 var(--g)) drop-shadow(0 -1px 0 var(--g))
      drop-shadow(1px 0 0 var(--g)) drop-shadow(-1px 0 0 var(--g)) blur(0.5px);
    transition: opacity 0.2s ease-in-out, transform 0.3s ease-in-out 1.5s;
    transform: scale(0);
    z-index: 10;
    &:before {
      content: "";
      transition: 0.3s ease-in-out 0.2s;
      position: absolute;
      background: var(--bg);
      clip-path: polygon(1% 0%, 35% 100%, 53% 58%, 100% 48%);
      width: 100%;
      height: 100%;
    }
  }
  &.loaded {
    transition: 2s ease-in-out 0s;
    filter: brightness(1);
    #cursor {
      transform: scale(1);
    }
    &:hover {
      #cursor {
        opacity: 1;
      }
    }
    #header {
      #inner {
        transition: 0.75s ease-in-out 3s;
        transform: translate(0, calc(-50% - 0vmin)) scaleX(1);
        &:before {
          transform: translateY(-0.15vmin);
          opacity: 0.75;
          transition: 1s ease-in-out 3.75s;
        }
      }
    }
    #lower {
      &:after {
        opacity: 1;
        transition: 0.75s ease-in-out 3s;
      }
      .box {
        transform: translateY(0);
        @for $i from 1 through 5 {
          &:nth-of-type(#{$i}) {
            &:before {
              opacity: 1;
            }
          }
        }
        @for $i from 5 through 10 {
          &:nth-of-type(#{$i}) {
            &:nth-of-type(n + 6) {
              &:before {
                clip-path: polygon(
                  0 0,
                  var(--total) 0%,
                  var(--total) 100%,
                  0% 100%
                );
              }

              &.loaded {
                &:before {
                  transition-delay: 0s;
                }
              }
            }
          }
        }
      }
    }
    img {
      opacity: 1;
      filter: blur(0px);
    }
    #wrap {
      &:before {
        height: calc(100% + 5vmin);
        opacity: 1;
      }
      .num {
        opacity: 1;
      }
    }
  }
  &:before,
  &:after {
    content: "";
    position: absolute;
    width: 112.5%;
    height: 112.5%;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) translateZ(0px);
    z-index: 12;
    background: linear-gradient(
        transparentize(--bg, 0.6) 50%,
        transparentize(darken(--bg, 80%), 0.95) 50%
      ),
      linear-gradient(
        90deg,
        transparentize(darken(--bg, 80%), 0.99),
        transparentize(#fff, 0.98),
        transparentize(darken(--bg, 80%), 0.94)
      );
    z-index: 12;
    background-size: 100% 2px, 3px 100%;
    pointer-events: none;
    border-radius: 10vmin;
    animation: flicker 3s ease-in-out infinite alternate;
    @keyframes flicker {
      22% {
        opacity: 1;
      }
      25% {
        opacity: 0.75;
      }
      37% {
        opacity: 1;
      }
    }
  }
  &:after {
    animation: none;
    box-shadow: inset 0 0 50vmin 5vmin #000, 0 0 0 50vmin #000;
    opacity: 0.5;
    width: 100%;
    height: 100%;
  }
  #header {
    position: absolute;
    width: 100vmin;
    top: calc(50% - 50.75vmin);
    display: flex;
    justify-content: flex-end;
    #inner {
      overflow: hidden;
      height: 5.5vmin;
      top: calc(50% - 0.15vmin);
      transform: translate(0, calc(-50% - 0vmin)) scaleX(0);
      transform-origin: right;
      transition: 0.75s ease-in-out 0s;
      z-index: 6;
      position: absolute;
      width: calc(100% - 17.25vmin);
      border: 0.15vmin solid var(--g);
      left: 1.5vmin;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      box-sizing: border-box;
      border-color: var(--g) transparent var(--g) var(--g);
      &:before {
        opacity: 0;
        content: attr(data-completion);
        font-size: 2.75vmin;
        color: var(--bg);
        text-shadow: 0 0.2vmin var(--g), 0.2vmin 0 var(--g), -0.2vmin 0 var(--g),
          0 -0.2vmin var(--g);
        font-weight: 900;
        padding-right: 5vmin;
        line-height: 1;
        transform: translateY(20vmin);
        transition: 0.6s ease-in-out;
      }
    }
  }
  img {
    height: 12.5vmin;
    width: auto;
    margin-right: -2.5vmin;
    transition: 1s ease-in-out 2.25s;
    opacity: 0;
    filter: blur(20px);
  }
  #lower {
    position: absolute;
    width: 100vmin;
    height: 15vmin;
    top: calc(50% + 33.5vmin);
    left: 50%;
    transform: translate(-50%, 0);
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-column-gap: 3vmin;
    grid-row-gap: 1vmin;
    padding: 2vmin 2vmin 4vmin;
    box-sizing: border-box;
    &:after {
      content: "0x#{random(1000) + 500} : 0x#{random(1000) + 500}";
      position: absolute;
      width: 100vw;
      left: 50%;
      transform: translateX(-50%);
      text-align: center;
      bottom: -1vmin;
      font-size: 2vmin;
      border-top: 0.25vmin solid var(--g);
      padding-top: 0.5vmin;
      opacity: 0;
      transition: 0.75s ease-in-out 0s;
    }
    .box {
      position: relative;
      transition: transform 1s ease-in-out, background-position 3s ease-in-out;
      transform: translateY(50vh);
      &.open {
        .hatch {
          &:before,
          &:after {
            transition-delay: 0s;
          }
          &:before {
            transform: rotate(-135deg);
          }
          &:after {
            transform: rotate(135deg);
          }
        }
      }
      .hatch {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        &:before,
        &:after {
          content: "";
          position: absolute;
          top: 0;
          left: 0.25vmin;
          width: calc(50% - 0.25vmin);
          height: 0.25vmin;
          background: var(--g);
          transform-origin: 0% 100%;
          transition: transform 0.3s ease-in-out 0.5s;
          box-shadow: 0 0.25vmin 0 var(--bg), 0 0.5vmin 0 var(--bg),
            0 0.75vmin 0 var(--bg);
        }
        &:after {
          left: auto;
          right: 0.25vmin;
          transform-origin: 100% 100%;
        }
      }
      &:after {
        content: "";
        position: absolute;
        inset: 0;
        background: var(--bg);
        z-index: -1;
        box-shadow: inset 0.25vmin 0 0 var(--g), inset -0.25vmin 0 0 var(--g),
          0 0.25vmin 0 0 var(--g);
      }
      .inner {
        position: absolute;
        z-index: -2;
        left: 50%;
        &:before {
          animation: fontShift 1s ease-in-out 1 forwards;
          font-size: 7vmin;
          @keyframes fontShift {
            to {
              font-size: 3vmin;
            }
          }
        }
      }
      @for $i from 1 through 10 {
        &:nth-of-type(#{$i}) {
          transition-delay: #{$i/20 + 2}s, #{$i/20 + 3}s;
          &:before {
            z-index: 9;
            content: "0#{$i}";
            position: absolute;
            font-size: 3vmin;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            opacity: 0;
            transition: 1s ease-in-out;
            transition-delay: #{$i/20 + 3.5}s;
          }
          &:nth-of-type(n + 6) {
            overflow: hidden;
            .hatch {
              display: none;
            }
            &:before,
            &:after {
              box-shadow: inset 0 0 0 0.25vmin var(--g);
              opacity: 1;
              width: 100%;
              height: 100%;
              background: var(--g);
              transform: none;
              display: flex;
              align-items: center;
              padding: 0 1vmin;
              box-sizing: border-box;
              content: attr(data-percent) "%";
              top: 0;
              left: 0;
              font-size: 2.5vmin;
              color: var(--bg);
              z-index: 9;
            }
            &:before {
              clip-path: polygon(0 0, 0% 0%, 0% 100%, 0% 100%);
            }
            &:after {
              background: var(--bg);
              color: var(--g);
              z-index: 8;
            }
          }
        }
      }
    }
  }
  #wrap {
    width: 100vmin;
    height: 65vmin;
    display: grid;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: repeat(8, 1fr);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    position: relative;
    transform: translateY(-2.5vmin);
    &.noclick {
      pointer-events: none;
    }
    &:before {
      content: "";
      position: absolute;
      width: 100vw;
      height: 1vmin;
      top: 50%;
      left: 50%;
      opacity: 0.85;
      transform: translate(-50%, -50%);
      pointer-events: none;
      box-shadow: 0 0.25vmin 0 var(--g), 0 1vmin 0 var(--bg),
        0 1.125vmin 0 var(--g), 0 -0.25vmin 0 var(--g), 0 -1vmin 0 var(--bg),
        0 -1.125vmin 0 var(--g);
      z-index: 1;
      opacity: 0;
      transition: opacity 0.25s ease-in-out 1s, height 1s ease-in-out 1.25s;
    }
    .num {
      position: relative;
      opacity: 0;
      transition: opacity 0.5s ease-in-out 3s;
      animation: float 2s ease-in-out infinite alternate;
      --x: -0.25vmin;
      --y: 0vmin;
      transform: translate(calc(var(--x) * 1), calc(var(--y) * 1))
        translateZ(0px);
      @keyframes float {
        to {
          transform: translate(calc(var(--x) * -1), calc(var(--y) * -1))
            translateZ(0px);
        }
      }
      @for $i from 1 through 112 {
        &:nth-of-type(#{$i}) {
          animation-delay: #{$i/-20}s;
          --x: #{(random(15) - 1) / 20}vmin;
          &:nth-of-type(even) {
            --x: 0vmin;
            --y: #{(random(15) - 1) / 20}vmin;
          }
        }
      }
      .inner {
        position: absolute;
        width: 50%;
        height: 75%;
        top: 12.5%;
        left: 25%;

        &:before {
          position: absolute;
          left: 50%;
          top: 50%;
          font-size: 7vmin;
        }
      }
    }
  }
}

body.waffleparty {
  filter: brightness(1);
  pointer-events: none;
  #waffleparty {
    scale: 0.5;
    --playstate: running;
  }
}

#waffleparty {
  pointer-events: none;
  transition: scale 0.5s ease-in-out 5s;
  scale: 0;
  position: fixed;
  width: 75vmin;
  height: 75vmin;
  z-index: 10;
  --playstate: paused;
  span {
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: -1;
    font-size: 15vmin;
    color: transparent;
    animation: bounceIn 0.5s ease-in-out 1 forwards;
    transform-origin: 50% 60vmin;
    transform: translate(-50%, calc(-50% - 50vmin))
      rotate(calc((360deg / var(--length)) * var(--index) - 80deg));
    animation: rotateText 20s linear infinite;
    animation-play-state: var(--playstate);
    &:before {
      content: attr(data-char);
      position: absolute;
      color: var(--g);
      display: inline-block;
      animation: wiggle 0.5s ease-in-out infinite alternate
        calc(var(--index) * 0.05s);
      animation-play-state: var(--playstate);
      @keyframes wiggle {
        from {
          transform: translateY(-1.5vmin);
        }
        to {
          transform: translateY(1.5vmin);
        }
      }
    }
    @keyframes rotateText {
      to {
        transform: translate(-50%, calc(-50% - 50vmin))
          rotate(calc((360deg / var(--length)) * var(--index) - 440deg));
      }
    }
  }
  &:before,
  &:after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: 100%;
    animation: spin 10s linear infinite;
    @keyframes spin {
      to {
        rotate: 360deg;
      }
    }
  }
  &:before {
    background: linear-gradient(
        to right,
        transparent calc(50% - 3vmin),
        var(--g) calc(50% - 3vmin),
        var(--g) calc(50% + 3vmin),
        transparent calc(50% + 3vmin)
      ),
      linear-gradient(
        to bottom,
        transparent calc(50% - 3vmin),
        var(--g) calc(50% - 3vmin),
        var(--g) calc(50% + 3vmin),
        transparent calc(50% + 3vmin)
      ),
      repeating-linear-gradient(
          to right,
          transparent 3vmin,
          var(--g) 3vmin,
          var(--g) 6vmin,
          transparent 6vmin,
          transparent 12vmin
        )
        1.5vmin 0,
      repeating-linear-gradient(
          to bottom,
          var(--bg) 3vmin,
          var(--g) 3vmin,
          var(--g) 6vmin,
          var(--bg) 6vmin,
          var(--bg) 12vmin
        )
        0 1.5vmin;
    box-shadow: inset 0 0 0 4vmin var(--g);
  }
  &:after {
    background: linear-gradient(
        to right,
        transparent calc(50% - 1.75vmin),
        var(--bg) calc(50% - 1.75vmin),
        var(--bg) calc(50% + 1.75vmin),
        transparent calc(50% + 1.75vmin)
      ),
      linear-gradient(
        to bottom,
        transparent calc(50% - 1.75vmin),
        var(--bg) calc(50% - 1.75vmin),
        var(--bg) calc(50% + 1.75vmin),
        transparent calc(50% + 1.75vmin)
      );
    box-shadow: 0 0 0 1vmin var(--g), inset 0 0 0 1vmin var(--bg);
  }
}
